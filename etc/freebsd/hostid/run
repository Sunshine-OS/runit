#!/bin/sh

sv start sysctl || exit 1

hostid_set()
{
	uuid=$1
	# Generate hostid based on hostuuid - take first four bytes from md5(uuid).
	id=`echo -n $uuid | /sbin/md5`
	id="0x${id%????????????????????????}"

	# Set both kern.hostuuid and kern.hostid.
	#
	echo "Setting hostuuid: ${uuid}."
	/sbin/sysctl kern.hostuuid="${uuid}" >/dev/null
	echo "Setting hostid: ${id}."
	/sbin/sysctl kern.hostid=${id} >/dev/null
}

hostid_hardware()
{
	uuid=`kenv -q smbios.system.uuid`
	x="[0-9a-f]"
	y=$x$x$x$x
	case "${uuid}" in
	$y$y-$y-$y-$y-$y$y$y)
		echo "${uuid}"
		;;
	esac
}

hostid_generate()
{
	# First look for UUID in hardware.
	uuid=`hostid_hardware`
	if [ -z ${uuid} ]; then
		# If not found, fall back to software-generated UUID.
		uuid=`uuidgen`
	fi
	hostid_set $uuid
}

hostid_reset()
{
	hostid_generate
	# Store newly generated UUID in ${hostid_file}.
	echo $uuid > ${hostid_file}
	if [ $? -ne 0 ]; then
		echo "could not store hostuuid in ${hostid_file}." >2
	fi
}

# If ${hostid_file} already exists, we take UUID from there.
if [ -r ${hostid_file} ]; then
	hostid_set `cat ${hostid_file}`
else
	# No hostid file, generate UUID.
	hostid_generate
fi

