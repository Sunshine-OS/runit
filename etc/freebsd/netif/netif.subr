

# network_common routine
#	Common configuration subroutine for network interfaces. This
#	routine takes all the preparatory steps needed for configuriing
#	an interface and then calls $routine.
network_common()
{
	local _cooked_list _tmp_list _fail _func _ok _str _cmdifn

	_func=

	if [ -z "$1" ]; then
		err 1 "network_common(): No function name specified."
	else
		_func="$1"
		shift
	fi

	# Set the scope of the command (all interfaces or just one).
	#
	_cooked_list=
	_tmp_list=
	_cmdifn=$*
	if [ -n "$_cmdifn" ]; then
		# Don't check that the interface(s) exist.  We need to run
		# the down code even when the interface doesn't exist to
		# kill off wpa_supplicant.
		# XXXBED: is this really true or does wpa_supplicant die?
		# if so, we should get rid of the devd entry
		_cooked_list="$_cmdifn"
	else
		_cooked_list="`list_net_interfaces`"
	fi

	# Expand epair[0-9] to epair[0-9][ab].
	for ifn in $_cooked_list; do
	case ${ifn#epair} in
	[0-9]*[ab])	;;	# Skip epair[0-9]*[ab].
	[0-9]*)
		for _str in $_cooked_list; do
		case $_str in
		$ifn)	_tmp_list="$_tmp_list ${ifn}a ${ifn}b" ;;
		*)	_tmp_list="$_tmp_list ${ifn}" ;;
		esac
		done
		_cooked_list=${_tmp_list# }
	;;
	esac
	done

	_dadwait=
	_fail=
	_ok=
	for ifn in ${_cooked_list# }; do
		# Skip if ifn does not exist.
		case $_func in
		ifn_stop)
			if ! ${IFCONFIG_CMD} $ifn > /dev/null 2>&1; then
				echo "$ifn does not exist.  Skipped."
				_fail="${_fail} ${ifn}"
				continue
			fi
		;;
		esac
		if ${_func} ${ifn} $2; then
			_ok="${_ok} ${ifn}"
			if ipv6if ${ifn}; then
				_dadwait=1
			fi
		else
			_fail="${_fail} ${ifn}"
		fi
	done

	# inet6 address configuration needs sleep for DAD.
	case ${_func}:${_dadwait} in
	ifn_start:1|ifn_vnetup:1|ifn_vnetdown:1)
		sleep `${SYSCTL_N} net.inet6.ip6.dad_count`
		sleep 1
	;;
	esac

	_str=
	if [ -n "${_ok}" ]; then
		case ${_func} in
		ifn_start)
			_str='Starting'
		;;
		ifn_stop)
			_str='Stopping'
		;;
		ifn_vnetup)
			_str='Moving'
		;;
		ifn_vnetdown)
			_str='Reclaiming'
		;;
		esac
		echo "${_str} Network:${_ok}."
		case ${_func} in
		ifn_vnetup)
			# Clear _ok not to do "ifconfig $ifn"
			# because $ifn is no longer in the current vnet.
			_ok=
		;;
		esac
		if check_startmsgs; then
			for ifn in ${_ok}; do
				/sbin/ifconfig ${ifn}
			done
		fi
	fi

	echo "The following interfaces were not configured: $_fail"
}

